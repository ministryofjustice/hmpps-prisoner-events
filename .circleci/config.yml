version: 2.1

orbs:
  hmpps: ministryofjustice/hmpps@7

parameters:
  alerts-slack-channel:
    type: string
    default: syscon-alerts
  releases-slack-channel:
    type: string
    default: dps-releases

jobs:
  validate:
    docker:
      - image: cimg/openjdk:19.0
      - image: localstack/localstack:1.3
        environment:
          - SERVICES=sqs,sns
          - ES_PORT_EXTERNAL=4571
          - DEBUG=${DEBUG- }
          - DATA_DIR=/tmp/localstack/data
          - DOCKER_HOST=unix:///var/run/docker.sock
          - LAMBDA_EXECUTOR=${LAMBDA_EXECUTOR- }
          - AWS_EXECUTION_ENV=True
          - DEFAULT_REGION=eu-west-2
          - TMPDIR=/private
      - image: gvenzl/oracle-xe:18-slim
        environment:
          - ORACLE_PASSWORD=test

    environment:
      _JAVA_OPTIONS: -Xmx256m -XX:ParallelGCThreads=2 -XX:ConcGCThreads=2 -Djava.util.concurrent.ForkJoinPool.common.parallelism=2 -Dorg.gradle.daemon=false -Dkotlin.compiler.execution.strategy=in-process -Dorg.gradle.workers.max=1
    working_directory: ~/app
    resource_class: medium

    steps:
      - checkout
      - hmpps/wait_till_ready
      - run:
          name: Wait for Oracle to start
          command: |
            set +e
            RTN=1
            for i in {1..20}; do
              curl -4 --connect-timeout 30 http://localhost:1521
              ERR=$?
              if [[ $ERR == 0 || $ERR == 52 ]]; then
                RTN=0
                break
              fi
              sleep 10
            done
            exit $RTN

      - restore_cache:
          keys:
            - gradle-{{ checksum "build.gradle.kts" }}
            - gradle-
      - run:
          command: ./gradlew check
      - save_cache:
          paths:
            - ~/.gradle
          key: gradle-{{ checksum "build.gradle.kts" }}
      - store_test_results:
          path: build/test-results
      - store_artifacts:
          path: build/reports/tests

workflows:
  version: 2
  build-test-and-deploy:
    jobs:
      - validate:
          filters:
            tags:
              ignore: /.*/
      - hmpps/helm_lint:
          name: helm_lint
      - hmpps/build_multiplatform_docker:
          name: build_docker
          filters:
            branches:
              only:
                - main
      - hmpps/deploy_env:
          name: deploy_dev
          env: "dev"
          jira_update: true
          context: hmpps-common-vars
          filters:
            branches:
              only:
                - main
          requires:
            - validate
            - build_docker
            - helm_lint
      - hmpps/smoke_test:
          context: hmpps-smoketest-common-vars
          name: smoke_test
          jdk_tag: "19.0"
          requires:
            - deploy_dev
      - request-preprod-approval:
          type: approval
          requires:
            - smoke_test
      - hmpps/deploy_env:
          name: deploy_preprod
          env: "preprod"
          jira_update: true
          jira_env_type: staging
          context:
            - hmpps-common-vars
            - hmpps-prisoner-events-preprod
          requires:
            - request-preprod-approval
      - request-prod-approval:
          type: approval
          requires:
            - deploy_preprod
      - hmpps/deploy_env:
          name: deploy_prod
          env: "prod"
          jira_update: true
          jira_env_type: production
          slack_notification: true
          slack_channel_name: << pipeline.parameters.releases-slack-channel >>
          context:
            - hmpps-common-vars
            - hmpps-prisoner-events-prod
          requires:
            - request-prod-approval

  security:
    triggers:
      - schedule:
          cron: "11 5 * * 1-5"
          filters:
            branches:
              only:
                - main
    jobs:
      - hmpps/gradle_owasp_dependency_check:
          slack_channel: << pipeline.parameters.alerts-slack-channel >>
          context:
            - hmpps-common-vars
      - hmpps/trivy_latest_scan:
          slack_channel: << pipeline.parameters.alerts-slack-channel >>
          context:
            - hmpps-common-vars
#      - hmpps/veracode_pipeline_scan:
#          slack_channel: << pipeline.parameters.alerts-slack-channel >>
#          context:
#            - veracode-credentials
#            - hmpps-common-vars
  security-weekly:
    triggers:
      - schedule:
          cron: "0 5 * * 1"
          filters:
            branches:
              only:
                - main
    jobs:
      - hmpps/veracode_policy_scan:
          slack_channel: << pipeline.parameters.alerts-slack-channel >>
          context:
            - veracode-credentials
            - hmpps-common-vars
